const vmt_BT
 :BT.Start

const vmt_Tree
 :Tree.Init
 :Tree.SetRight
 :Tree.SetLeft
 :Tree.GetRight
 :Tree.GetLeft
 :Tree.GetKey
 :Tree.SetKey
 :Tree.GetHas_Right
 :Tree.GetHas_Left
 :Tree.SetHas_Left
 :Tree.SetHas_Right
 :Tree.Compare
 :Tree.Insert
 :Tree.Delete
 :Tree.Remove
 :Tree.RemoveRight
 :Tree.RemoveLeft
 :Tree.Search
 :Tree.Print
 :Tree.RecPrint


func Main()
 t.0 = HeapAllocZ(4)
 [t.0] = :vmt_BT
 if t.0 goto :null0
  Error("null pointer")
 null0:
 t.1 = [t.0]
 t.1 = [t.1+0]
 t.2 = call t.1(t.0)
 PrintIntS(t.2)
 ret 

func BT.Start(this)
 t.0 = HeapAllocZ(28)
 [t.0] = :vmt_Tree
 root = t.0
 if root goto :null1
  Error("null pointer")
 null1:
 t.1 = [root]
 t.1 = [t.1+0]
 t.2 = call t.1(root 16)
 ntb = t.2
 if root goto :null2
  Error("null pointer")
 null2:
 t.3 = [root]
 t.3 = [t.3+72]
 t.4 = call t.3(root)
 ntb = t.4
 PrintIntS(100000000)
 if root goto :null3
  Error("null pointer")
 null3:
 t.5 = [root]
 t.5 = [t.5+48]
 t.6 = call t.5(root 8)
 ntb = t.6
 if root goto :null4
  Error("null pointer")
 null4:
 t.7 = [root]
 t.7 = [t.7+72]
 t.8 = call t.7(root)
 ntb = t.8
 if root goto :null5
  Error("null pointer")
 null5:
 t.9 = [root]
 t.9 = [t.9+48]
 t.10 = call t.9(root 24)
 ntb = t.10
 if root goto :null6
  Error("null pointer")
 null6:
 t.11 = [root]
 t.11 = [t.11+48]
 t.12 = call t.11(root 4)
 ntb = t.12
 if root goto :null7
  Error("null pointer")
 null7:
 t.13 = [root]
 t.13 = [t.13+48]
 t.14 = call t.13(root 12)
 ntb = t.14
 if root goto :null8
  Error("null pointer")
 null8:
 t.15 = [root]
 t.15 = [t.15+48]
 t.16 = call t.15(root 20)
 ntb = t.16
 if root goto :null9
  Error("null pointer")
 null9:
 t.17 = [root]
 t.17 = [t.17+48]
 t.18 = call t.17(root 28)
 ntb = t.18
 if root goto :null10
  Error("null pointer")
 null10:
 t.19 = [root]
 t.19 = [t.19+48]
 t.20 = call t.19(root 14)
 ntb = t.20
 if root goto :null11
  Error("null pointer")
 null11:
 t.21 = [root]
 t.21 = [t.21+72]
 t.22 = call t.21(root)
 ntb = t.22
 if root goto :null12
  Error("null pointer")
 null12:
 t.23 = [root]
 t.23 = [t.23+68]
 t.24 = call t.23(root 24)
 PrintIntS(t.24)
 if root goto :null13
  Error("null pointer")
 null13:
 t.25 = [root]
 t.25 = [t.25+68]
 t.26 = call t.25(root 12)
 PrintIntS(t.26)
 if root goto :null14
  Error("null pointer")
 null14:
 t.27 = [root]
 t.27 = [t.27+68]
 t.28 = call t.27(root 16)
 PrintIntS(t.28)
 if root goto :null15
  Error("null pointer")
 null15:
 t.29 = [root]
 t.29 = [t.29+68]
 t.30 = call t.29(root 50)
 PrintIntS(t.30)
 if root goto :null16
  Error("null pointer")
 null16:
 t.31 = [root]
 t.31 = [t.31+68]
 t.32 = call t.31(root 12)
 PrintIntS(t.32)
 if root goto :null17
  Error("null pointer")
 null17:
 t.33 = [root]
 t.33 = [t.33+52]
 t.34 = call t.33(root 12)
 ntb = t.34
 if root goto :null18
  Error("null pointer")
 null18:
 t.35 = [root]
 t.35 = [t.35+72]
 t.36 = call t.35(root)
 ntb = t.36
 if root goto :null19
  Error("null pointer")
 null19:
 t.37 = [root]
 t.37 = [t.37+68]
 t.38 = call t.37(root 12)
 PrintIntS(t.38)
 ret 0

func Tree.Init(this v_key)
 [this+12] = v_key
 [this+16] = 0
 [this+20] = 0
 ret 1

func Tree.SetRight(this rn)
 [this+8] = rn
 ret 1

func Tree.SetLeft(this ln)
 [this+4] = ln
 ret 1

func Tree.GetRight(this)
 t.0 = [this+8]
 ret t.0

func Tree.GetLeft(this)
 t.0 = [this+4]
 ret t.0

func Tree.GetKey(this)
 t.0 = [this+12]
 ret t.0

func Tree.SetKey(this v_key)
 [this+12] = v_key
 ret 1

func Tree.GetHas_Right(this)
 t.0 = [this+20]
 ret t.0

func Tree.GetHas_Left(this)
 t.0 = [this+16]
 ret t.0

func Tree.SetHas_Left(this val)
 [this+16] = val
 ret 1

func Tree.SetHas_Right(this val)
 [this+20] = val
 ret 1

func Tree.Compare(this num1 num2)
 ntb = 0
 t.0 = Add(num2 1)
 nti = t.0
 t.1 = LtS(num1 num2)
 if0 t.1 goto :if0_else
  ntb = 0
  goto :if0_end
 if0_else:
  t.2 = LtS(num1 nti)
  t.3 = Sub(1 t.2)
  if0 t.3 goto :if1_else
   ntb = 0
   goto :if1_end
  if1_else:
   ntb = 1
  if1_end:
 if0_end:
 ret ntb

func Tree.Insert(this v_key)
 t.0 = HeapAllocZ(28)
 [t.0] = :vmt_Tree
 new_node = t.0
 if new_node goto :null20
  Error("null pointer")
 null20:
 t.1 = [new_node]
 t.1 = [t.1+0]
 t.2 = call t.1(new_node v_key)
 ntb = t.2
 current_node = this
 cont = 1
 while0_top:
 if0 cont goto :while0_end
  if current_node goto :null21
   Error("null pointer")
  null21:
  t.3 = [current_node]
  t.3 = [t.3+20]
  t.4 = call t.3(current_node)
  key_aux = t.4
  t.5 = LtS(v_key key_aux)
  if0 t.5 goto :if2_else
   if current_node goto :null22
    Error("null pointer")
   null22:
   t.6 = [current_node]
   t.6 = [t.6+32]
   t.7 = call t.6(current_node)
   if0 t.7 goto :if3_else
    if current_node goto :null23
     Error("null pointer")
    null23:
    t.8 = [current_node]
    t.8 = [t.8+16]
    t.9 = call t.8(current_node)
    current_node = t.9
    goto :if3_end
   if3_else:
    cont = 0
    if current_node goto :null24
     Error("null pointer")
    null24:
    t.10 = [current_node]
    t.10 = [t.10+36]
    t.11 = call t.10(current_node 1)
    ntb = t.11
    if current_node goto :null25
     Error("null pointer")
    null25:
    t.12 = [current_node]
    t.12 = [t.12+8]
    t.13 = call t.12(current_node new_node)
    ntb = t.13
   if3_end:
   goto :if2_end
  if2_else:
   if current_node goto :null26
    Error("null pointer")
   null26:
   t.14 = [current_node]
   t.14 = [t.14+28]
   t.15 = call t.14(current_node)
   if0 t.15 goto :if4_else
    if current_node goto :null27
     Error("null pointer")
    null27:
    t.16 = [current_node]
    t.16 = [t.16+12]
    t.17 = call t.16(current_node)
    current_node = t.17
    goto :if4_end
   if4_else:
    cont = 0
    if current_node goto :null28
     Error("null pointer")
    null28:
    t.18 = [current_node]
    t.18 = [t.18+40]
    t.19 = call t.18(current_node 1)
    ntb = t.19
    if current_node goto :null29
     Error("null pointer")
    null29:
    t.20 = [current_node]
    t.20 = [t.20+4]
    t.21 = call t.20(current_node new_node)
    ntb = t.21
   if4_end:
  if2_end:
  goto :while0_top
 while0_end:
 ret 1

func Tree.Delete(this v_key)
 current_node = this
 parent_node = this
 cont = 1
 found = 0
 is_root = 1
 while1_top:
 if0 cont goto :while1_end
  if current_node goto :null30
   Error("null pointer")
  null30:
  t.0 = [current_node]
  t.0 = [t.0+20]
  t.1 = call t.0(current_node)
  key_aux = t.1
  t.2 = LtS(v_key key_aux)
  if0 t.2 goto :if5_else
   if current_node goto :null31
    Error("null pointer")
   null31:
   t.3 = [current_node]
   t.3 = [t.3+32]
   t.4 = call t.3(current_node)
   if0 t.4 goto :if6_else
    parent_node = current_node
    if current_node goto :null32
     Error("null pointer")
    null32:
    t.5 = [current_node]
    t.5 = [t.5+16]
    t.6 = call t.5(current_node)
    current_node = t.6
    goto :if6_end
   if6_else:
    cont = 0
   if6_end:
   goto :if5_end
  if5_else:
   t.7 = LtS(key_aux v_key)
   if0 t.7 goto :if7_else
    if current_node goto :null33
     Error("null pointer")
    null33:
    t.8 = [current_node]
    t.8 = [t.8+28]
    t.9 = call t.8(current_node)
    if0 t.9 goto :if8_else
     parent_node = current_node
     if current_node goto :null34
      Error("null pointer")
     null34:
     t.10 = [current_node]
     t.10 = [t.10+12]
     t.11 = call t.10(current_node)
     current_node = t.11
     goto :if8_end
    if8_else:
     cont = 0
    if8_end:
    goto :if7_end
   if7_else:
    if0 is_root goto :if9_else
     if current_node goto :null35
      Error("null pointer")
     null35:
     t.12 = [current_node]
     t.12 = [t.12+28]
     t.13 = call t.12(current_node)
     t.14 = Sub(1 t.13)
     if0 t.14 goto :ss0_else
      if current_node goto :null36
       Error("null pointer")
      null36:
      t.15 = [current_node]
      t.15 = [t.15+32]
      t.16 = call t.15(current_node)
      t.17 = Sub(1 t.16)
      goto :ss0_end
     ss0_else:
      t.17 = 0
     ss0_end:
     if0 t.17 goto :if10_else
      ntb = 1
      goto :if10_end
     if10_else:
      if this goto :null37
       Error("null pointer")
      null37:
      t.18 = [this]
      t.18 = [t.18+56]
      t.19 = call t.18(this parent_node current_node)
      ntb = t.19
     if10_end:
     goto :if9_end
    if9_else:
     if this goto :null38
      Error("null pointer")
     null38:
     t.20 = [this]
     t.20 = [t.20+56]
     t.21 = call t.20(this parent_node current_node)
     ntb = t.21
    if9_end:
    found = 1
    cont = 0
   if7_end:
  if5_end:
  is_root = 0
  goto :while1_top
 while1_end:
 ret found

func Tree.Remove(this p_node c_node)
 if c_node goto :null39
  Error("null pointer")
 null39:
 t.0 = [c_node]
 t.0 = [t.0+32]
 t.1 = call t.0(c_node)
 if0 t.1 goto :if11_else
  if this goto :null40
   Error("null pointer")
  null40:
  t.2 = [this]
  t.2 = [t.2+64]
  t.3 = call t.2(this p_node c_node)
  ntb = t.3
  goto :if11_end
 if11_else:
  if c_node goto :null41
   Error("null pointer")
  null41:
  t.4 = [c_node]
  t.4 = [t.4+28]
  t.5 = call t.4(c_node)
  if0 t.5 goto :if12_else
   if this goto :null42
    Error("null pointer")
   null42:
   t.6 = [this]
   t.6 = [t.6+60]
   t.7 = call t.6(this p_node c_node)
   ntb = t.7
   goto :if12_end
  if12_else:
   if c_node goto :null43
    Error("null pointer")
   null43:
   t.8 = [c_node]
   t.8 = [t.8+20]
   t.9 = call t.8(c_node)
   auxkey1 = t.9
   if p_node goto :null44
    Error("null pointer")
   null44:
   t.10 = [p_node]
   t.10 = [t.10+16]
   t.11 = call t.10(p_node)
   if t.11 goto :null45
    Error("null pointer")
   null45:
   t.12 = [t.11]
   t.12 = [t.12+20]
   t.13 = call t.12(t.11)
   auxkey2 = t.13
   if this goto :null46
    Error("null pointer")
   null46:
   t.14 = [this]
   t.14 = [t.14+44]
   t.15 = call t.14(this auxkey1 auxkey2)
   if0 t.15 goto :if13_else
    if p_node goto :null47
     Error("null pointer")
    null47:
    t.16 = [p_node]
    t.16 = [t.16+8]
    t.17 = call t.16(p_node my_null)
    ntb = t.17
    if p_node goto :null48
     Error("null pointer")
    null48:
    t.18 = [p_node]
    t.18 = [t.18+36]
    t.19 = call t.18(p_node 0)
    ntb = t.19
    goto :if13_end
   if13_else:
    if p_node goto :null49
     Error("null pointer")
    null49:
    t.20 = [p_node]
    t.20 = [t.20+4]
    t.21 = call t.20(p_node my_null)
    ntb = t.21
    if p_node goto :null50
     Error("null pointer")
    null50:
    t.22 = [p_node]
    t.22 = [t.22+40]
    t.23 = call t.22(p_node 0)
    ntb = t.23
   if13_end:
  if12_end:
 if11_end:
 ret 1

func Tree.RemoveRight(this p_node c_node)
 while2_top:
 if c_node goto :null51
  Error("null pointer")
 null51:
 t.0 = [c_node]
 t.0 = [t.0+28]
 t.1 = call t.0(c_node)
 if0 t.1 goto :while2_end
  if c_node goto :null52
   Error("null pointer")
  null52:
  t.2 = [c_node]
  t.2 = [t.2+12]
  t.3 = call t.2(c_node)
  if t.3 goto :null53
   Error("null pointer")
  null53:
  t.4 = [t.3]
  t.4 = [t.4+20]
  t.5 = call t.4(t.3)
  if c_node goto :null54
   Error("null pointer")
  null54:
  t.6 = [c_node]
  t.6 = [t.6+24]
  t.7 = call t.6(c_node t.5)
  ntb = t.7
  p_node = c_node
  if c_node goto :null55
   Error("null pointer")
  null55:
  t.8 = [c_node]
  t.8 = [t.8+12]
  t.9 = call t.8(c_node)
  c_node = t.9
  goto :while2_top
 while2_end:
 if p_node goto :null56
  Error("null pointer")
 null56:
 t.10 = [p_node]
 t.10 = [t.10+4]
 t.11 = call t.10(p_node my_null)
 ntb = t.11
 if p_node goto :null57
  Error("null pointer")
 null57:
 t.12 = [p_node]
 t.12 = [t.12+40]
 t.13 = call t.12(p_node 0)
 ntb = t.13
 ret 1

func Tree.RemoveLeft(this p_node c_node)
 while3_top:
 if c_node goto :null58
  Error("null pointer")
 null58:
 t.0 = [c_node]
 t.0 = [t.0+32]
 t.1 = call t.0(c_node)
 if0 t.1 goto :while3_end
  if c_node goto :null59
   Error("null pointer")
  null59:
  t.2 = [c_node]
  t.2 = [t.2+16]
  t.3 = call t.2(c_node)
  if t.3 goto :null60
   Error("null pointer")
  null60:
  t.4 = [t.3]
  t.4 = [t.4+20]
  t.5 = call t.4(t.3)
  if c_node goto :null61
   Error("null pointer")
  null61:
  t.6 = [c_node]
  t.6 = [t.6+24]
  t.7 = call t.6(c_node t.5)
  ntb = t.7
  p_node = c_node
  if c_node goto :null62
   Error("null pointer")
  null62:
  t.8 = [c_node]
  t.8 = [t.8+16]
  t.9 = call t.8(c_node)
  c_node = t.9
  goto :while3_top
 while3_end:
 if p_node goto :null63
  Error("null pointer")
 null63:
 t.10 = [p_node]
 t.10 = [t.10+8]
 t.11 = call t.10(p_node my_null)
 ntb = t.11
 if p_node goto :null64
  Error("null pointer")
 null64:
 t.12 = [p_node]
 t.12 = [t.12+36]
 t.13 = call t.12(p_node 0)
 ntb = t.13
 ret 1

func Tree.Search(this v_key)
 current_node = this
 cont = 1
 ifound = 0
 while4_top:
 if0 cont goto :while4_end
  if current_node goto :null65
   Error("null pointer")
  null65:
  t.0 = [current_node]
  t.0 = [t.0+20]
  t.1 = call t.0(current_node)
  key_aux = t.1
  t.2 = LtS(v_key key_aux)
  if0 t.2 goto :if14_else
   if current_node goto :null66
    Error("null pointer")
   null66:
   t.3 = [current_node]
   t.3 = [t.3+32]
   t.4 = call t.3(current_node)
   if0 t.4 goto :if15_else
    if current_node goto :null67
     Error("null pointer")
    null67:
    t.5 = [current_node]
    t.5 = [t.5+16]
    t.6 = call t.5(current_node)
    current_node = t.6
    goto :if15_end
   if15_else:
    cont = 0
   if15_end:
   goto :if14_end
  if14_else:
   t.7 = LtS(key_aux v_key)
   if0 t.7 goto :if16_else
    if current_node goto :null68
     Error("null pointer")
    null68:
    t.8 = [current_node]
    t.8 = [t.8+28]
    t.9 = call t.8(current_node)
    if0 t.9 goto :if17_else
     if current_node goto :null69
      Error("null pointer")
     null69:
     t.10 = [current_node]
     t.10 = [t.10+12]
     t.11 = call t.10(current_node)
     current_node = t.11
     goto :if17_end
    if17_else:
     cont = 0
    if17_end:
    goto :if16_end
   if16_else:
    ifound = 1
    cont = 0
   if16_end:
  if14_end:
  goto :while4_top
 while4_end:
 ret ifound

func Tree.Print(this)
 current_node = this
 if this goto :null70
  Error("null pointer")
 null70:
 t.0 = [this]
 t.0 = [t.0+76]
 t.1 = call t.0(this current_node)
 ntb = t.1
 ret 1

func Tree.RecPrint(this node)
 if node goto :null71
  Error("null pointer")
 null71:
 t.0 = [node]
 t.0 = [t.0+32]
 t.1 = call t.0(node)
 if0 t.1 goto :if18_else
  if node goto :null72
   Error("null pointer")
  null72:
  t.2 = [node]
  t.2 = [t.2+16]
  t.3 = call t.2(node)
  if this goto :null73
   Error("null pointer")
  null73:
  t.4 = [this]
  t.4 = [t.4+76]
  t.5 = call t.4(this t.3)
  ntb = t.5
  goto :if18_end
 if18_else:
  ntb = 1
 if18_end:
 if node goto :null74
  Error("null pointer")
 null74:
 t.6 = [node]
 t.6 = [t.6+20]
 t.7 = call t.6(node)
 PrintIntS(t.7)
 if node goto :null75
  Error("null pointer")
 null75:
 t.8 = [node]
 t.8 = [t.8+28]
 t.9 = call t.8(node)
 if0 t.9 goto :if19_else
  if node goto :null76
   Error("null pointer")
  null76:
  t.10 = [node]
  t.10 = [t.10+12]
  t.11 = call t.10(node)
  if this goto :null77
   Error("null pointer")
  null77:
  t.12 = [this]
  t.12 = [t.12+76]
  t.13 = call t.12(this t.11)
  ntb = t.13
  goto :if19_end
 if19_else:
  ntb = 1
 if19_end:
 ret 1

